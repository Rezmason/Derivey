Adaptive curve smoothness

  If spacing > 0,
    // current behavior: evenly spaced points
  Get the beginning, middle, and end samples
  const isStraightLine = samples have same tangent and their positions sit on a straight line
  if (isStraightLine) {
    return [start, end].map(({pos}) => pos);
  }

  const maxDistSquared = maxDist ** 2;
  Get coarse samples of the curve
  let iterate = true;
  let samples = [ start, (start + middle) / 2, end ];
  while (iterate) {
    iterate = false;
    for (every sample) {
      Grab the two successive samples: s0, s1, s2 (looping around)
      If (distanceSquared(s0.point, s1.point) > maxDist || abs(angle(s0.point, s1.point, s2.point)) < minAngle) {
        insert a sample between s0 and s1;
        iterate = true;
      }
    }
  }

  return samples.map(({pos}) => pos);



HTML revision
  Right now, everything is a bunch of meshes with lines in them
  What if there was a way to compose objects and then repeat them?

Portable Drivey
  Like A-Frame, drivey.js (and minified) would find a root tag in the DOM and render it
  browserify / webpack / rollup
    Gotta prune, jeez

Why doesn't it run on iPads?

Change car auto-steering logic when the car is going in reverse

Replace framerate gauge with simulated RPM
  Prevent moving in reverse on when on auto-pilot
  Simluated gearbox?

Improve performance of Approximation::getNearest

Cavern level
  Stalagmites and stalagtites, subtle color variation?

Much, much later
  Spotify playlist embed?
  About box?
  Localization
  Collision
    "theWalls" in jj
