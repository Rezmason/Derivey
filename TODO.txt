Adaptive curve smoothness
  Gets Drivey away from ExtrudeBufferGeometry
    Basically rewrites shapes.js
    Every operation on a shape should be non-destructive until it gets converted to a geometry
  Start with coarse samples of the curve
    For every sample,
      Grab the two successive samples: s0, s1, s2 (looping around)
      If (
        distance(s0.p, s2.p) > MAX_DIST ||
        distance(s0.q, s2.q) > MAX_DIST ||
        abs(angle(s0.p, s1.p, s2.p)) < MIN_ANGLE ||
        abs(angle(s0.q, s1.q, s2.q)) < MIN_ANGLE
      ) {
        insert a sample between s0 and s1
        insert a sample between s1 and s2
      }
    Do this until there are no insertions.
  Ignore curve segments, at first
  Eventually, curve segments should only be specified when the points used to represent a curve are explicit
    Like the telephone lines


HTML revision
  Right now, everything is a bunch of meshes with lines in them
  What if there was a way to compose objects and then repeat them?

Portable Drivey
  Like A-Frame, drivey.js (and minified) would find a root tag in the DOM and render it
  browserify / webpack / rollup
    Gotta prune, jeez

Why doesn't it run on iPads?

Change car auto-steering logic when the car is going in reverse

Replace framerate gauge with simulated RPM
  Prevent moving in reverse on when on auto-pilot
  Simluated gearbox?

Improve performance of Approximation::getNearest

Cavern level
  Stalagmites and stalagtites, subtle color variation?

Much, much later
  Spotify playlist embed?
  About box?
  Localization
  Collision
    "theWalls" in jj
